import java.util.LinkedList;
import java.util.Stack;

class Node
{
	int data;
	Node left,right;
	
	Node(int item)
	{
		data = item;
		left = right = null;
	}
}

public class Inorder {

	static Node root;
	
	public static void inorder()
	{
		Stack<Node> stack = new Stack<>();
		
		Node node = root;
		
		while(node!=null)
		{
			stack.push(node);
			node = node.left;
		}
		
		while(!stack.isEmpty())
		{
			Node node1 = stack.pop();
			System.out.println(node1.data);
			
			if(node1.right!=null) {
				node1 = node1.right;
			
			while(node1!=null)
			{
				stack.push(node1);
				node1 = node1.left;
			}
			}
		}
		
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Inorder tree = new Inorder();
		tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(3);
        tree.root.left.left = new Node(4);
        tree.root.left.right = new Node(5);
        tree.inorder();
	}

}
